@page "/movies/search"
@using Sprint3.Client.Pages.Components
@inject IServiceMovie movie 
<div class ="jumbotron">
    <h3 class="display-4.5" >Buscar pelicula</h3>
    <div class ="form-inline">
    <div class= "form-group mb-2">
        <label for="moviename" class="sr-only"> Nombre Pelicula</label>
        <input type="text" @bind-value ="movie_name" @bind-value:event="oninput"
        @onkeypress="@((KeyboardEventArgs e) =>MovieNameKeyPress(e))" class="form-control"
        id="movie_name" Placeholder="Buscar pelicula"/>
    </div>

    <div class="form-group mx-sm-3 mb-2">
        <select class="form-control" @bind="categorySelectd">
            <option value="0">Seleccione un Genero</option>
            @foreach (var item in genres)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
    </div>
</div>
<div class =" form-inline">
    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="estrenos" @bind="futurosEstrenos">
        <label  class="form-check-label" for="estrenos">Futuros estrenos</label>
    </div>

    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="cartelera" @bind="enCartelera">
        <label  class="form-check-label" for="cartelera">En cartelera</label>
    </div>

    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="mejor_Calificadas" @bind="mejorCalificadas">
        <label  class="form-check-label" for="mejor_Calificadas">Mejor calificadas</label>
    </div>
</div>
<button type="button" class="btn btn-primary mb-2 btn-sm" @onclick="CargarNuevosActores">
        Buscar
    </button>
    <button type="button" class="btn btn-danger mb-2 btn-sm" @onclick="LimpiarCampos">
        Limpiar campos
    </button> 
</div>

<CardMovieComponent Movies="Movies"></CardMovieComponent>

@code{
    private List<Movie> Movies;
    string movie_name="";
    string categorySelectd ="";
    private bool futurosEstrenos =false;
    private bool enCartelera =false;
    private bool mejorCalificadas =false;

    protected override void OnInitialized()
        {
            Movies = movie.GetMovies();
        }


    private List<Genre> genres =new List<Genre>();
    private void MovieNameKeyPress(KeyboardEventArgs e){
        if(e.Key =="Enter");
        {
            CargarNuevosActores();
        }
    }
    private void CargarNuevosActores(){
        Movies =movie.GetMovies().Where(x=>x.MovieName.ToLower().Contains(movie_name.ToLower())).ToList();
        Console.WriteLine($"Nombre pelicula: {movie_name}");
        Console.WriteLine($"Genero seleccionado: {categorySelectd}");
        Console.WriteLine($"Futuros estrenos: {futurosEstrenos}");
        Console.WriteLine($"En cartelera: {enCartelera}");
        Console.WriteLine($"Mejor calificadas: {mejorCalificadas}");
    }

    private void LimpiarCampos(){
        Movies = movie.GetMovies();
        movie_name ="";
        categorySelectd="0";
        futurosEstrenos =false;
        enCartelera =false;
        mejorCalificadas =false;
    }
}