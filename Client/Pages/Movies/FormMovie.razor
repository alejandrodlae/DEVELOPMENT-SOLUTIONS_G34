@using Sprint3.Client.Pages.Components
@using Sprint3.Client.Model
<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

   
    <div class="container">
        <div class="jumbotron">
            <div class="form-group">
                <div class="row">
                    <div class="col col-sm-9">
                       <label>Nombre de la pelicula</label>
                        @* Input para ingresar el nombre de la pelicula *@
                        <InputText class="form-control" @bind-Value="@Movie.MovieName"></InputText>
                        <ValidationMessage For="@(()=>Movie.MovieName)"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-4">
                       <label>Fecha de lanzamiento</label>
                        <div class="form-group">
                            @* Fecha de lanzamiento*@
                            <InputDate class="form-control" @bind-Value="@Movie.MovieReleaseDate"></InputDate>
                            <ValidationMessage For="@(()=>Movie.MovieReleaseDate)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            @* Sinopsis de la pelicula... descripción *@
            <div class="form-group">
               <label>Sinopsis</label>
                <InputTextArea class="form-control" @bind-Value="@Movie.Synopsis"></InputTextArea>
                <ValidationMessage For="@(()=>Movie.Synopsis)"></ValidationMessage>
            </div>
            @* Selección de categorías *@
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label>Selecciona las categorías</label>
                        <div>
                            <SelectorMultiple Seleccionados="Seleccionados" NoSeleccionados="NoSeleccionados">
                            </SelectorMultiple>
                        </div>
                    </div>
                    <div class="col">
                        @*Image => Imagen de la pelicula *@
                        <div class="form-group">
                            <ImageComponent Label="" ImageSelected="ImageSelected" ImageURL=""></ImageComponent>
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>

        </div>
    </div>
</EditForm>
@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Genre> CategoriasSeleccionadas { get; set; } = new List<Genre>();
    [Parameter] public List<Genre> CategoriasNoSeleccionadas { get; set; } = new List<Genre>();

    private string posterTemporal;
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();

    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();

    private void ImageSelected(string imageB64)
    {
        Movie.Image = imageB64;
    }

    protected override void OnInitialized()
    {
        Seleccionados = CategoriasSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        NoSeleccionados = CategoriasNoSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        if (!string.IsNullOrWhiteSpace(Movie.Image))
        {
            posterTemporal = Movie.Image;
            Movie.Image = null;
        }
    }
}